2. When printed, the value is equal to 0
3. Puting extra money doesnt give you money back. it leaves it at 0.
6. it should be "public class labClass" for labclass
7. yes
8. Yes its possible.
9. If the word "class" is deleted, then there wouldn't be any class and it wouldn't work.
10. [FIELDS: "private int price;", "private int balance;", and "private int total;"

CONSTRUCTORS: "price = cost;", "balabce = 0;", "total = 0;", "return price;", "return balance;", "balance = balance + amount;", "System.out.printIn()", and "total = total + balance;")

METHODS: "public TicketMachine(int cost)", "public int getPrice()", "public int getBalance()", "public void insertMoney(int amount)", and "public void printTicket()"]

11. The constructor uses the provided data to construct the output. Constructors can change variables.

12. a) type int b) type Student c) type Server
13. a) alive b) tutor c) game
14. I'd say Student, Server, Person, and Game are class nae
15. No other order is valid. It's like using words in incorrect order in english for example "Meet you nice! Day how has your today?"
16. Yes, again taking the english language as an example. the ";" is like a period (".") in a sentence.
17. - code -
18. Belongs to the Student class
19. 2 parameters of type String and type double
20. yes, we need to assign the parameters to the fields of the class, because if not, they will disapear. it might be a string like auther, title, or an int like price or number of pages. We cant know for sure. 

21. public Pet(String petsName)
{
 name = petsName;
}

22. public Date(String Month, int Day, int Year);
23. The difference in the header is that they have different headers (getPrice and getBalance). and the difference in the body is that they both return differnt variables (price and balance)
24. How much money is in the TicketMachine.
25. If it was changed, then nothing wrong would happen. Because the name of the method has nothing to do with return statement.
26. - code -
27. "missing return statement"
28. getPrice "public int" and printTicket uses "public void".
31. score = score + points;
32. Yes
33. Price = price - amount;
34. public void setAge(int currentAge)
{
  age = currentAge;
}
35. private void setCurrentState(boolean Status)
{
  alive = Status;
}
36. when price = price, any method linked with price will return 0 instead of the inputed price.
37. "My cat has green eyes" will be printed
39. then the price wouldn't be an int, it would print "price".
40. "# price cents." would be printed out.
42. No. They dont have the same ticket price when created.
43. Yes. the %d and %n make the variable display its value.
44. It doesn't demand you create a price for the TicketMachine.
45. you can either make your own price, or make so that its price is a set amount.
46. it doesn't need any perameters. Its a mutator.
